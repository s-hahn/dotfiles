;; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

;; Configuration Layers
;; --------------------

(setq-default
 dotspacemacs-distribution 'spacemacs
 ;; List of additional paths where to look for configuration layers.
 ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
 dotspacemacs-configuration-layer-path '("~/dotfiles/.spacemacs-config/config-layers/")
 ;; List of configuration layers to load.
 dotspacemacs-configuration-layers '(ansible
                                     (auto-completion
                                      :variables
                                      auto-completion-enable-snippets-in-popup t
                                      auto-completion-enable-help-tooltip nil)
                                     chrome
                                     clojure
                                     colors
                                     custom-org-config
                                     emacs-lisp
                                     elixir
                                     erc
                                     erlang
                                     ess
                                     eyebrowse
                                     games
                                     git
                                     github
                                     gnus
                                     html
                                     latex
                                     lua
                                     markdown
                                     org
                                     pandoc
                                     python
                                     python-config
                                     research-config
                                     search-engine
                                     semantic
                                     (shell
                                      :variables
                                      shell-default-shell 'term
                                      shell-default-term-shell "/bin/zsh")
                                     spell-checking
                                     syntax-checking
                                     themes-megapack
                                     tmux
                                     version-control)
 ;; A list of packages and/or extensions that will not be install and loaded.
 dotspacemacs-excluded-packages '(evil-terminal-cursor-changer)

 ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
 ;; are declared in a layer which is not a member of
 ;; the list `dotspacemacs-configuration-layers'
 dotspacemacs-delete-orphan-packages t)

;; Initialization Hooks
;; --------------------

(defun dotspacemacs/init ()
  "User initialization for Spacemacs. This function is called at the very
 startup."

    (setq-default
    use-package-verbose t
    dotspacemacs-editing-style 'vim
    ;; Specify the startup banner. If the value is an integer then the
    ;; banner with the corresponding index is used, if the value is `random'
    ;; then the banner is chosen randomly among the available banners, if
    ;; the value is nil then no banner is displayed.
    dotspacemacs-startup-banner 'official
    ;; List of themes, the first of the list is loaded when spacemacs starts.
    ;; Press <SPC> T n to cycle to the next theme in the list (works great
    ;; with 2 themes variants, one dark and one light)
    dotspacemacs-themes '(zenburn adwaita)
    ;; The leader key
    dotspacemacs-leader-key "SPC"
    ;; Major mode leader key is a shortcut key which is the equivalent of
    ;; pressing `<leader> m`
    dotspacemacs-major-mode-leader-key ","
    ;; The command key used for Evil commands (ex-commands) and
    ;; Emacs commands (M-x).
    ;; By default the command key is `:' so ex-commands are executed like in Vim
    ;; with `:' and Emacs commands are executed with `<leader> :'.
    dotspacemacs-command-key ":"
    ;; which-key delay in seconds. The which-key is the popup buffer listing
    ;; the commands bound to the current keystrokes.
    which-key-idle-delay 0.4
    ;; If non nil the frame is fullscreen when Emacs starts up (Emacs 24.4+ only).
    dotspacemacs-fullscreen-at-startup nil
    ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
    ;; Use to disable fullscreen animations in OSX."
    dotspacemacs-fullscreen-use-non-native nil
    ;; If non nil the frame is maximized when Emacs starts up (Emacs 24.4+ only).
    ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
    dotspacemacs-maximized-at-startup nil
    ;; A value from the range (0..100), in increasing opacity, which describes the
    ;; transparency level of a frame when it's active or selected. Transparency can
    ;; be toggled through `toggle-transparency'.
    dotspacemacs-active-transparency 90
    ;; A value from the range (0..100), in increasing opacity, which describes the
    ;; transparency level of a frame when it's inactive or deselected. Transparency
    ;; can be toggled through `toggle-transparency'.
    dotspacemacs-inactive-transparency 90
    ;; If non nil unicode symbols are displayed in the mode line (e.g. for lighters)
    ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth scrolling
    ;; overrides the default behavior of Emacs which recenters the point when
    ;; it reaches the top or bottom of the screen
    dotspacemacs-smooth-scrolling t
    ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
    dotspacemacs-smartparens-strict-mode nil
    ;; If non nil advises quit functions to keep server open when quitting.
    dotspacemacs-persistent-server nil
    ;; The default package repository used if no explicit repository has been
    ;; specified with an installed package.
    ;; Not used for now.
    dotspacemacs-default-package-repository nil
    ;; set preview in latex files bigger
    preview-scale-function 1.6

    dotspacemacs-mode-line-unicode-symbols nil)

    (if window-system (setq dotspacemacs-mode-line-unicode-symbols t))

   (setq dotspacemacs-default-font '("Hack"
                                    :size 15
                                    :weight normal
                                    :width normal
                                    :powerline-scale 1.4))

  (add-to-list 'load-path "~/dotfiles/.spacemacs-config/org-mode/lisp")
  (add-to-list 'load-path "~/dotfiles/.spacemacs-config/org-mode/contrib/lisp" t)
  (add-to-list 'load-path "~/dotfiles/.spacemacs-config" t)
  (add-to-list 'load-path "~/dotfiles/.spacemacs-config/org-reveal" t)
  (add-to-list 'load-path "~/dotfiles/.spacemacs-config/org-ref" t)
  (add-to-list 'load-path "~/dotfiles/.spacemacs-config/helm-bibtex" t)
  (require 'init-packages)

  (defun set-exec-path-from-shell-PATH ()
  (let ((path-from-shell (replace-regexp-in-string
                          "[ \t\n]*$"
                          ""
                          (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))))
    (setenv "PATH" path-from-shell)
    (setq eshell-path-env path-from-shell) ; for eshell users
    (setq exec-path (split-string path-from-shell path-separator))))

    (when window-system (set-exec-path-from-shell-PATH))
)

(defun dotspacemacs/user-config ()
  "This is were you can ultimately override default Spacemacs configuration.
   This function is called at the very end of Spacemacs initialization."
  (use-package helm
    :defer 5
    :commands (helm-execute-persistent-action
               helm-select-action
               helm-grep-mode-jump-other-window
               helm-grep-mode-jump-other-window-forward
               helm-grep-mode-jump-other-window-backward)
    :config
    (progn
        (define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action) ; rebihnd tab to do persistent action
        (define-key helm-map (kbd "C-i") 'helm-execute-persistent-action) ; make TAB works in terminal
        (define-key helm-map (kbd "C-z")  'helm-select-action) ; list actions using C-z
        (define-key helm-map (kbd "C-S-j")  'helm-scroll-other-window)
        (define-key helm-map (kbd "C-S-k")  'helm-scroll-other-window-down)
        (define-key helm-grep-mode-map (kbd "<return>")  'helm-grep-mode-jump-other-window)
        (define-key helm-grep-mode-map (kbd "n")  'helm-grep-mode-jump-other-window-forward)
        (define-key helm-grep-mode-map (kbd "p")  'helm-grep-mode-jump-other-window-backward)
        (setq helm-split-window-in-side-p t)
      )
    )
    ;; set terminal command
    (defun start-term () (interactive) (term "/bin/zsh"))
    (evil-leader/set-key "at" 'start-term)

    (setq flycheck-check-syntax-automatically '(save mode-enabled idle-change))
    (setq flycheck-idle-change-delay 5)

    (global-set-key (kbd "<C-mouse-4>") 'zoom-frm-in)
    (global-set-key (kbd "<C-mouse-5>") 'zoom-frm-out)
    (global-set-key (kbd "C-+") 'zoom-frm-in)
    (global-set-key (kbd "C--") 'zoom-frm-out)
    (setq dired-listing-switches "-alhk")
    (setq dired-listings-switches "-alhk")
    (setq compilation-finish-function nil)
    (use-package pytest)
    ;; Make evil-mode up/down operate in screen lines instead of logical lines
    (define-key evil-normal-state-map "j" 'evil-next-visual-line)
    (define-key evil-normal-state-map "k" 'evil-previous-visual-line)
    ;; Also in visual mode
    (define-key evil-visual-state-map "j" 'evil-next-visual-line)
    (define-key evil-visual-state-map "k" 'evil-previous-visual-line)
    (setq doc-view-resolution 300)
)



;; Custom variables
;; ----------------

;; Do not write anything in this section. This is where Emacs will
;; auto-generate custom variable definitions.


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-ispell-requires 4)
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(paradox-github-token t)
 '(ring-bell-function (quote ignore) t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
