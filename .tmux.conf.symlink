# reload config binding
bind r source-file ~/.tmux.conf \; display "reloading tmux config..."

# specify default shell
set -g default-shell /bin/zsh

# tweak timing between key sequences
set -sg escape-time 0

# if off, the client is switched to the most recently active of the remaining sessions
set -g detach-on-destroy off

# this option configures whether programs running inside tmux may use the terminal alternate screen feature
set -w -g alternate-screen off

# set the default value for the $TERM environment variable within tmux sessions
set -g default-terminal "screen.xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# start counting window number (base-index) at 1, rather than the default, 0
set -g base-index 1

# like base-index but set the starting index for pane numbers
set -g pane-base-index 1

# set the maximum number of lines held in window history
set -g history-limit 8192

# display a visible indicator of each pane shown
set -w -g display-panes-time 2000

# terminal emulator window title
set -g set-titles on
set -g set-titles-string "tmux-session:#S | host:#H | window:#I.#P | app:#W"

tmux_fg="#dcdfe4"
tmux_bg="#282c34"
tmux_bg_2="#202328"
tmux_blue="#61afef"
tmux_red="#e06c75"
tmux_purple="#c678dd"
tmux_orange="#d19a66"
tmux_pane_border="#363a4f"
tmux_status_fg="#565758"
tmux_status_bg="#3e4451"

set -g message-style fg=$tmux_red,bg=$tmux_bg_2
set -g message-command-style fg=$tmux_purple,bg=$tmux_bg_2
set -g mode-style fg=$tmux_orange,bg=$tmux_bg_2

set -g status on
set -g status-justify "left"
set -g status-left-length 80
set -g status-right-length 80
set -g status-fg $tmux_fg
set -g status-bg $tmux_bg

set -w -g window-status-separator "\uE0B1"
set -w -g window-status-format " #I:#W "
set -w -g window-status-current-format " #I:#W "
set -w -g window-status-style fg=$tmux_status_fg,bg=$tmux_bg
set -w -g window-status-current-style fg=$tmux_fg,bg=$tmux_bg
set -w -g window-status-activity-style fg=$tmux_blue,bg=$tmux_bg

# status format left
set -g status-left "#[fg=$tmux_fg,bg=$tmux_status_bg,bold] \uE000 #S #[fg=$tmux_status_bg,bg=$tmux_bg,bold]\uE0B0"

# status format right
set -g status-right "#[fg=$tmux_blue]\uE0B2#[fg=$tmux_bg,bg=$tmux_blue,bold] \uF007 #(whoami) #[fg=$tmux_status_bg,bg=$tmux_blue]\uE0B2#[fg=$tmux_fg,bg=$tmux_status_bg,bold] \uf109  #h #(./dotfiles/uptime.sh) #[fg=$tmux_blue]\ue0b2#[fg=$tmux_bg,bg=$tmux_blue,bold] Û±ëÅ #(date +'%I:%M %p') #[fg=$tmux_status_bg,bg=$tmux_blue]\uE0B2#[fg=$tmux_fg,bg=$tmux_status_bg,bold] \uF073  #(date +'%Y-%m-%d') "

# set clock color
set -w -g clock-mode-colour $tmux_blue
set -w -g clock-mode-style 12

# panes
set -g pane-border-style fg=$tmux_pane_border
set -g pane-active-border-style fg=$tmux_blue
set -g display-panes-active-colour $tmux_fg
set -g display-panes-colour $tmux_blue

set -w -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off

# key bindings
# set the prefix to ^A.
unbind-key C-b
set -g prefix ^A
bind-key a send-prefix

# detach ^D
unbind-key ^D
bind-key ^D detach

# displays *
unbind-key *
bind-key * list-clients

# windows ^W w
unbind-key w
bind-key w list-windows

# show window list
unbind-key k
bind-key k choose-window

# quit \
unbind-key \
bind-key \ confirm-before "kill-server"

# kill window: K
unbind-key K
bind-key K confirm-before "kill-window"

# rename window: A
unbind-key A
bind-key A command-prompt "rename-window %%"

# last window ^A
unbind-key ^A
bind-key ^A last-window

# create window: c
bind-key c new-window -c '#{pane_current_path}'

# next window: n
unbind-key n
bind-key n next-window

# prev window: p
unbind-key p
bind-key p previous-window

# pane movement shortcuts (same as vim)
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# smart pane switching with awareness of emacs splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key - resize-pane -U 2
bind-key _ resize-pane -U 16
bind-key = resize-pane -D 2
bind-key + resize-pane -D 16
bind-key 9 resize-pane -L 6
bind-key ( resize-pane -L 24
bind-key 0 resize-pane -R 6
bind-key ) resize-pane -R 24

bind-key ^s display-panes \; command-prompt "swap-pane -s %1"

# to paste
bind-key C-v run "xsel -o | tmux load-buffer - ; tmux paste-buffer"